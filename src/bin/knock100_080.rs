/*
2つの正の整数値を入力させ、
互いに素であるか判定するプログラム
2つの正の整数が互いに素とは、1以外に共通公約数を持たない関係

このプログラムは、2つの正の整数値を入力させ、互いに素であるか判定します。
まず、gcd関数という関数を作成します。
この関数は、2つの正の整数値を受け取り、
最大公約数を返します。
最大公約数が1であれば、2つの数は互いに素です。
次に、main関数で、ユーザーから2つの正の整数値を入力します。
その後、gcd関数を使って、2つの数の最大公約数を計算します。
最後に、最大公約数が1であれば、「2つの数は互いに素です」と出力します。
そうでなければ、「2つの数は互いに素ではありません」と出力します。
*/

mod lib_knock100_get_num;
use crate::lib_knock100_get_num::get_num;

fn gcd(mut a: i32, mut b: i32) -> i32 {
  while b != 0 {
      let t = b;
      b = a % b;
      a = t;
  }
  a
}

fn main() {
  let a = get_num("input number".to_string());
  let b = get_num("input number".to_string());
  if gcd(a, b) == 1 {
      println!("{}と{}は互いに素です", a, b);
  } else {
      println!("{}と{}は互いに素ではありません", a, b);
  }
}
